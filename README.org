
* Password Widget

* Description

This project is essentially a wrapper around KeepassXC. It uses the keepassxc-cli to interact with password database files. I had been using KeepassXC, but it was cumbersome to open the application, select the password, and manually copy it using Ctrl+C. My solution is a much faster, mouseless interface.

Unfortunately, the UI is not easily customizable since I opted for a highly stylized pixel art approach, which doesnâ€™t lend itself to easy color customization. To create the UI, I used AGS.

This project is essentially a wrapper around [[https://keepassxc.org/][Keepassxc]].  It uses the [[https://manpages.ubuntu.com/manpages/focal/man1/keepassxc-cli.1.html][keepassxc-cli]] to interact with the password database files.  I had been using [[https://keepassxc.org/][Keepassxc]] however it was cumbersome to opent the application, select the password, and manually copy it using Ctrl+C. My solution is a much faster, mouseless interface.

I went for a very stylized approach with pixel art which came out pretty good.  To actually create the UI I used [[https://github.com/Aylur/ags][AGS]].  
* Screenshots
[[./password-enter.png]]
[[./ss-in-use.png]]
[[./close-up.png]]

* Installation

if your using nix then its super easy, just add it as in input and put the derivation in your packages

#+begin_src sh

{
  description = "demo flake";

  inputs = {
    nixpkgs.url = "github:NixOS/nixpkgs/nixpkgs-unstable";
    flake-utils.url = "github:numtide/flake-utils";

    pix_pass = {
      url = "github:k-kahora/keepassxc-widget";
    };
  };

  outputs = { self, nixpkgs, flake-utils, pix_pass}:
    flake-utils.lib.eachDefaultSystem (system:
      let
        pkgs = nixpkgs.legacyPackages.${system};
        lib = pkgs.lib;
        pix_pass_pkg = pix_pass.packages.${system}."default";
      in
      {
        devShells.default = pkgs.mkShell {
          packages = [
              pix_pass_pkg
          ];
        };
      }
    );
}

#+end_src

Then just run 
#+begin_src sh

nix develop

pass-launcher open

# to toggle the visablity
pass-launcher toggle

#+end_src

** My hyprland setup
#+begin_src sh
# On start I run pass-launcher open in the background

bind = $mainMod, P, exec, pass-launcher toggle
#+end_src

** Non nixos setup
Dependecies
- keepassxc
- ags
- libsecret (secret-tool)
 
clone the project and just run ~ags -c ./config.js~

* Usage

Open up an existing keepassxc database file and enter your password to begin browsing the available passwords.  Hitting enter on one

* Features

- [X] Open any database file on your system
- [X] Toggle between username and password
- [X] Enter groups and leave groups
- [X] C-g to toggle password or username
- [X] C-r to reset the database search
- [X] Click on lock to lock database file
- [X] Reads the ~KEEPASSXC_BD~ env variable so you do not have to use file selector

* Contributing
